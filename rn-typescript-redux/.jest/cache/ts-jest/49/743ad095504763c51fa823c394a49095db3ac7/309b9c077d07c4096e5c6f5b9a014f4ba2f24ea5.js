"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("../index");
describe('store - index', function () {
    describe('actions', function () {
        it('check create actions', function () {
            var expectedActions = [{ type: 'home/CHANGE_TEXT', text: '' }];
            var actions = [index_1.actionCreators.changeText()];
            expect(actions).toEqual(expectedActions);
        });
    });
    describe('reduce', function () {
        var state = index_1.default(undefined, {});
        it('should return the initialState', function () {
            expect(state).toEqual(index_1.initialState);
        });
        it('change text to "hi"', function () {
            state = index_1.default(state, index_1.actionCreators.changeText('hi'));
            expect(state).toHaveProperty('text', 'hi');
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2FwcGxlL2Rldi9wcm9qZWN0L3BlcnNvbmFsL3RvZG8tYXBwLWZyb250ZW5kL3JuLXR5cGVzY3JpcHQtcmVkdXgvc3JjL3N0b3Jlcy9fX3Rlc3RfXy9pbmRleC50ZXN0LnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsa0NBQXFFO0FBRXJFLFFBQVEsQ0FBQyxlQUFlLEVBQUU7SUFDeEIsUUFBUSxDQUFDLFNBQVMsRUFBRTtRQUNsQixFQUFFLENBQUMsc0JBQXNCLEVBQUU7WUFDekIsSUFBTSxlQUFlLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxrQkFBa0IsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNqRSxJQUFNLE9BQU8sR0FBRyxDQUFDLHNCQUFjLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztZQUM5QyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQzNDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsUUFBUSxFQUFFO1FBQ2pCLElBQUksS0FBSyxHQUFHLGVBQVcsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDdkMsRUFBRSxDQUFDLGdDQUFnQyxFQUFFO1lBQ25DLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsb0JBQVksQ0FBQyxDQUFDO1FBQ3RDLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLHFCQUFxQixFQUFFO1lBQ3hCLEtBQUssR0FBRyxlQUFXLENBQUMsS0FBSyxFQUFFLHNCQUFjLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDNUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDN0MsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9hcHBsZS9kZXYvcHJvamVjdC9wZXJzb25hbC90b2RvLWFwcC1mcm9udGVuZC9ybi10eXBlc2NyaXB0LXJlZHV4L3NyYy9zdG9yZXMvX190ZXN0X18vaW5kZXgudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSG9tZVJlZHVjZXIsIHsgaW5pdGlhbFN0YXRlLCBhY3Rpb25DcmVhdG9ycyB9IGZyb20gJy4uL2luZGV4JztcblxuZGVzY3JpYmUoJ3N0b3JlIC0gaW5kZXgnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdhY3Rpb25zJywgKCkgPT4ge1xuICAgIGl0KCdjaGVjayBjcmVhdGUgYWN0aW9ucycsICgpID0+IHtcbiAgICAgIGNvbnN0IGV4cGVjdGVkQWN0aW9ucyA9IFt7IHR5cGU6ICdob21lL0NIQU5HRV9URVhUJywgdGV4dDogJycgfV07XG4gICAgICBjb25zdCBhY3Rpb25zID0gW2FjdGlvbkNyZWF0b3JzLmNoYW5nZVRleHQoKV07XG4gICAgICBleHBlY3QoYWN0aW9ucykudG9FcXVhbChleHBlY3RlZEFjdGlvbnMpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgncmVkdWNlJywgKCkgPT4ge1xuICAgIGxldCBzdGF0ZSA9IEhvbWVSZWR1Y2VyKHVuZGVmaW5lZCwge30pO1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIHRoZSBpbml0aWFsU3RhdGUnLCAoKSA9PiB7XG4gICAgICBleHBlY3Qoc3RhdGUpLnRvRXF1YWwoaW5pdGlhbFN0YXRlKTtcbiAgICB9KTtcblxuICAgIGl0KCdjaGFuZ2UgdGV4dCB0byBcImhpXCInLCAoKSA9PiB7XG4gICAgICBzdGF0ZSA9IEhvbWVSZWR1Y2VyKHN0YXRlLCBhY3Rpb25DcmVhdG9ycy5jaGFuZ2VUZXh0KCdoaScpKTtcbiAgICAgIGV4cGVjdChzdGF0ZSkudG9IYXZlUHJvcGVydHkoJ3RleHQnLCAnaGknKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==